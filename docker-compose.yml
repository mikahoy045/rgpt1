name: rpgt

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.3

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: donanobispacem
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:donanobispacem@172.30.0.2:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.2

  rpgprep:
    build:
      context: .
      dockerfile: Dockerfile.rpgprep
    environment:
      - MONGODB_URL=mongodb://admin:donanobispacem@172.30.0.2:27017
      - MONGODB_DB=${MONGODB_DB}
      - MONGODB_COLLECTION=${MONGODB_COLLECTION}
      - MONGODB_COLLECTION_DASHBOARD=${MONGODB_COLLECTION_DASHBOARD}
      - RABBITMQ_HOST=172.30.0.3
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - RABBITMQ_ROUTING_KEY=${RABBITMQ_ROUTING_KEY}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: on-failure
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.4

  data-provider:
    build:
      context: .
      dockerfile: Dockerfile.data-provider
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:donanobispacem@172.30.0.2:27017
      - MONGODB_DB=${MONGODB_DB}
      - MONGODB_COLLECTION=${MONGODB_COLLECTION}
      - RABBITMQ_HOST=172.30.0.3
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - RABBITMQ_ROUTING_KEY=${RABBITMQ_ROUTING_KEY}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - PYTHONPATH=/app/Data-Provider-Service
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.5

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "7777:7777"
    environment:
      - MONGODB_URL=mongodb://admin:donanobispacem@172.30.0.2:27017
      - MONGODB_DB=${MONGODB_DB}
      - MONGODB_COLLECTION_DASHBOARD=${MONGODB_COLLECTION_DASHBOARD}
      - DATA_PROVIDER_URL=http://172.30.0.5:8000
      - PYTHONPATH=/app/Dashboard-Service
    depends_on:
      data-provider:
        condition: service_healthy
    restart: on-failure
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.6

  simulator:
    build:
      context: .
      dockerfile: Dockerfile.simulator
    environment:
      - DATA_PROVIDER_URL=http://172.30.0.5:8000
    depends_on:
      - dashboard
    restart: on-failure
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.7

  data-provider-tests:
    build:
      context: .
      dockerfile: Dockerfile.data-provider
    command: pytest Data-Provider-Service/tests/test_dprovider.py
    environment:
      - MONGODB_URL=mongodb://admin:donanobispacem@172.30.0.2:27017
      - MONGODB_DB=${MONGODB_DB}
      - MONGODB_COLLECTION=${MONGODB_COLLECTION}
      - RABBITMQ_HOST=172.30.0.3
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - RABBITMQ_ROUTING_KEY=${RABBITMQ_ROUTING_KEY}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      data-provider:
        condition: service_healthy
    networks:
      rpgt_network:
        ipv4_address: 172.30.0.8

volumes:
  mongodb_data:

networks:
  rpgt_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16